<!DOCTYPE html>
<html lang="fr">

<head>
    <meta charset="utf-8">
    <meta name="generator" content="https://github.com/hyperotlet/cosma">
    {% for meta, value in metas %}
    <meta name="{{ meta }}" content="{{ value }}">
    {% endfor %}
    <title>Cosma - Cosmoscope</title>

    <style>
        {% include "colors.css" %}
        {% include "styles.css" %}
    </style>

    <script>
        {% include "libs/d3.js" %}
        {% include "libs/fuse.js" %}
    </script>
</head>

<body>
    <div class="wrapper">
        <aside class="list-content">

            <header role="banner">
                <div class="self">
                    {% include "cosmalogo.svg" %}
                </div>

                <div class="head-load-bar", onclick="updateForces()">
                    <div id="head-load-bar-value"></div>
                </div>
            </header>

            <section>
                <input class="search-bar" id="search" placeholder="Rechercher..." autocomplete="off" />
                <ul id="search-result-list"></ul>
            </section>

            <details open="open">
                <summary class="menu-title">
                    Types <span class="badge">{{ types | length }}</span>
                </summary>

                <ul>
                    {% for type in types %}
                    <li class="filter n_{{ type.name }}">
                        <input data-filter="{{ type.nodes | join(",") }}" data-name="{{ type.name }}"
                            data-active="true" type="checkbox" checked id="f-{{ type.name }}">
                        <label for="f-{{ type.name }}">
                            {{ type.name }} <span class="badge">{{ type.nodes | length }}</span>
                        </label>
                    </li>
                    {% endfor %}
                </ul>
            </details>

            {% if tags.length !== 0 %}
            <details data-sort="tag">
                <summary class="menu-title">
                    Mots-clés <span class="badge">{{ tags | length }}</span>
                </summary>

                <button class="sort-btn">A-Z</button>

                <div id="tags-container" class="sort-box active">
                    {% for tag in tags %}
                    <button class="btn" data-tag="{{ loop.index }}" onclick="unlightNodes();activeTagButton(this);highlightNodes([{{ tag.nodes | join(',') }}])">
                        {{ tag.name }} <span class="badge">{{ tag.nodes | length }}</span>
                    </button>
                    {% endfor %}
                </div>

                <div class="sort-box">
                    {% for tag in tags | reverse %}
                    <button class="btn" data-tag="{{ loop.length - loop.index0 }}" onclick="unlightNodes();activeTagButton(this);highlightNodes([{{ tag.nodes | join(',') }}])">
                        {{ tag.name }} <span class="badge">{{ tag.nodes | length }}</span>
                    </button>
                    {% endfor %}
                </div>
            </details>
            {% endif %}

            <details id="index" data-sort="record">
                <summary class="menu-title">
                    Index <span class="badge">{{ index | length }}</span>
                </summary>

                <button class="sort-btn">A-Z</button>

                <ul class="sort-box active">
                    {% for link in index %}
                    <li data-index="{{ link.id }}" onclick="openRecord({{ link.id }})">
                        <span class="type-point n_{{ link.type }}">⬤</span>
                        <span>{{ link.title }}</span>
                    </li>
                    {% endfor %}
                </ul>

                <ul class="sort-box">
                    {% for link in index | reverse %}
                    <li data-index="{{ link.id }}" onclick="openRecord({{ link.id }})">
                        <span class="type-point n_{{ link.type }}">⬤</span>
                        <span>{{ link.title }}</span>
                    </li>
                    {% endfor %}
                </ul>
            </details>

            <details open="open">
                <summary class="menu-title">
                    Vues <span class="badge">{{ views | length }}</span>
                </summary>

                <button onclick="saveView()">Sauvegarder la vue actuelle</button>

                {% if views.length !== 0 %}
                <ul id="views-container">
                    {% for viewName, viewString in views %}
                    <button class="btn" onclick="activeFromParent(this);changeView('{{ viewString }}')">
                        {{ viewName }}
                    </button>
                    {% endfor %}
                </ul>
                {% endif %}
            </details>

            <details class="controls">
                <summary class="menu-title">Paramètres du graphe</summary>

                <ul>
                    <li>
                        <input type="checkbox" name="check" id="param-links" checked onchange="linksDisplayToggle(this.checked)">
                        <label for="param-links">Afficher les liens <span class="badge">{{ nblinks }}</span></label>
                    </li>
                    <li>
                        <input data-active="true" type="checkbox" id="param-label" checked onchange="labelDisplayToggle(this.checked)">
                        <label for="param-label">Afficher les étiquettes</label>
                    </li>
                </ul>

                {% macro inputRange(name, graphParameter, fx, defaultValue, min, max, step) %}
                <form oninput="graphProperties.{{ graphParameter }} = range.value; {{ fx }}">
                    <label>{{ name }}</label>
                    <input type="number" value="{{ defaultValue }}" name="number" min="{{ min }}" max="{{ max }}" oninput="range.value = number.value"/>
                    <input type="range" min="{{ min }}" max="{{ max }}" value="{{ defaultValue }}" name="range" step="{{ step }}" oninput="number.value = range.value"/>
                </form>
                {% endmacro %}

                <article>
                    <p>Attraction</p>
                    {{ inputRange('force', 'attraction.force', 'updateForces()', graphConfig.attraction.force, -600, -50, 0.1) }}
                    {{ inputRange('distance max', 'attraction.distance_max', 'updateForces()', graphConfig.attraction.distance_max, 0, 800, 0.1) }}
                    {{ inputRange('verticale', 'attraction.verticale', 'updateForces()', graphConfig.attraction.verticale, 0, 1, 0.01) }}
                    {{ inputRange('horizontale', 'attraction.horizontale', 'updateForces()', graphConfig.attraction.horizontale, 0, 1, 0.01) }}
                </article>

                <article>
                    <p>Position</p>
                    {{ inputRange('x', 'position.x', 'updateForces()', graphConfig.position.x, 0, 1, 0.05) }}
                    {{ inputRange('y', 'position.y', 'updateForces()', graphConfig.position.y, 0, 1, 0.05) }}
                </article>

                <article>
                    <p>Texte</p>
                    {{ inputRange('taille', 'text_size', 'updateGraphTextSize()', graphConfig.text_size, 5, 15, 0.5) }}
                </article>
            </details>

            <footer class="a-propos" onclick="openRecord('credits', false)">À propos</footer>
        </aside>

        <main id="record-container" class="fiche-container">
            <button class="fiche__btn-close" onclick="closeRecord()">Fermer</button>

            {% for record in index %}
            <article id="{{ record.id }}" class="fiche">
                <header>
                    <h1>{{ record.title }}</h1>

                    <div>
                        <span>id :</span>
                        <span>{{ record.id }}</span>
                    </div>

                    <div style="display:none;">
                        <span>dernière édition :</span>
                        <time class="fiche-date" datetime="{{ record.mtime }}">{{ record.mtime }}</time>
                    </div>

                    <div>
                        <span>type :</span>
                        <span>{{ record.type }}</span>
                    </div>

                    {% if record.tags %}
                    <div>
                        <span>mots-clés :</span>
                        <span>{{ record.tags }}</span>
                    </div>
                    {% endif %}

                    {% if record.radius.length !== 0 %}
                    <div title="Choisir le rayon du mode focus">
                        <span>mode focus :</span>
                        <span>
                            {% for niv in record.radius %}
                            <button id="{{ record.id }}-{{ loop.index }}"
                            class="radius-btn"
                            onclick="isolate([{{niv}}]);view.isolateId='{{ record.id }}-{{ loop.index }}'">{{ loop.index }}</button>
                            {% endfor %}
                        </span>
                    </div>
                    {% endif %}
                </header>

                <main>{{ record.content | safe }}</main>

                <footer class="list-content">
                    {% if record.links.length !== 0 %}
                    <details open="open">
                        <summary class="menu-title">
                            Liens <span class="badge">{{ record.links | length }}</span>
                        </summary>

                        <ul>
                            {% for link in record.links %}
                            <li onclick="openRecord({{ link.target.id }})">
                                <span class="type-point n_{{ link.target.type }}">⬤</span>
                                <span>{{ link.target.title }}</span>
                            </li>
                            {% endfor %}
                        </ul>
                    </details>
                    {% endif %}

                    {% if record.backlinks.length !== 0 %}
                    <details open="open">
                        <summary class="menu-title">
                            Rétroliens <span class="badge">{{ record.backlinks | length }}</span>
                        </summary>

                        <ul>
                            {% for backlink in record.backlinks %}
                            <li onclick="openRecord({{ backlink.target.id }})">
                                <span class="type-point n_{{ backlink.target.type }}">⬤</span>
                                <span>{{ backlink.target.title }}</span>
                            </li>
                            {% endfor %}
                        </ul>
                    </details>
                    {% endif %}
                </footer>
            </article>
            {% endfor %}

            <article id="credits" class="fiche">
                <main>
                    <h1>Cosma</h1>
                    <p>Version 1.0.0 • Licence MIT</p>

                    <ul>
                        <li>Arthur Perret</li>
                        <li>Guillaume Brioudes</li>
                        <li>Olivier Le Deuff</li>
                        <li>Clément Borel</li>
                        <li>Programme ANR <a href="https://hyperotlet.hypotheses.org/">HyperOtlet</a></li>
                    </ul>

                    <dl>
                        <dt><a href="https://d3js.org/" target="_blank">D3 <span class="badge">v4.13.0</span></a></dt>
                        <dd>Mike Bostock (BSD 3-Clause)</dd>
                        <dt><a href="https://mozilla.github.io/nunjucks/" target="_blank">Nunjucks <span class="badge">v3.2.3</span></a></dt>
                        <dd>James Long (BSD 2-Clause)</dd>
                        <dt><a href="https://github.com/nodeca/js-yaml" target="_blank">Js-yaml <span class="badge">v3.14.0</span></a></dt>
                        <dd>Vitaly Puzrin (MIT License)</dd>
                        <dt><a href="https://github.com/dworthen/js-yaml-front-matter" target="_blank">Js-yaml-front-matter <span class="badge">v4.1.0</span></a></dt>
                        <dd>Derek Worthen (MIT License)</dd>
                        <dt><a href="https://github.com/markdown-it/markdown-it" target="_blank">Markdown-it <span class="badge">v12.0.2</span></a></dt>
                        <dd>Vitaly Puzrin, Alex Kocharin (MIT License)</dd>
                        <dt><a href="https://github.com/wilsonzlin/minify-html" target="_blank">Minify-html <span class="badge">v0.4.3</span></a></dt>
                        <dd>Wilson Lin (MIT License)</dd>
                        <dt><a href="https://fusejs.io/" target="_blank">Fuse-js <span class="badge">v6.4.6</span></a></dt>
                        <dd>Kiro Risk (Apache License 2.0)</dd>
                        <dt><a href="https://momentjs.com/" target="_blank">Moment <span class="badge">v2.29.1</span></a></dt>
                        <dd>Iskren Ivov Chernev (MIT License)</dd>
                    </dl>

                    <ul>
                        <li><a href="https://github.com/hyperotlet/cosma" target="_blank">Téléchargement et installation</a></li>
                        <li><a href="https://hyperotlet.github.io/cosma/manuel-utilisation.html" target="_blank">Manuel d’utilisation</a></li>
                    </ul>
                </main>
            </article>
        </main>
    </div>

    <div class="graph-wrapper" style="background-color: {{ graphConfig.background_color }}">
        <svg id="graph_canvas">
            <defs>
                <marker id="arrow" viewBox="0 0 10 10" refX="22" refY="5" markerUnits="strokeWidth" markerWidth="7" markerHeight="7" orient="auto">
                    <path d="M 0 0 L 10 5 L 0 10 z"></path>
                </marker>
                <filter id="double">
                    <feMorphology in="SourceGraphic" result="a" operator="dilate" radius="0.2"></feMorphology>
                    <feComposite in="SourceGraphic" in2="a" result="xx" operator="xor"></feComposite>
                </filter>
            </defs>
        </svg>

        <div class="zoom-controls">
            <div>
                <button onclick="zoomLess()">-</button>
                <button onclick="zoomMore()">+</button>
            </div>
            <button onclick="zoomReset()">Recentrer</button>
            <button id="reset-isolate" onclick="resetNodes()">Annuler focus</button>
            <button id="reset-highlight" onclick="unlightNodes();unactiveTagsButton()">Annuler surbrillance</button>
        </div>
    </div>

    <script>
        {% include "graph-data.js" %}
        {% include "scripts/main.js" %}
        {% include "scripts/graph.js" %}
        {% include "scripts/zoom.js" %}
        {% include "scripts/search.js" %}
        {% include "scripts/filter.js" %}
        {% include "scripts/nodes.js" %}
        {% include "scripts/index.js" %}
        {% include "scripts/record.js" %}
        {% include "scripts/view.js" %}
    </script>
</body>

</html>