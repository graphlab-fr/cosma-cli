<!DOCTYPE html>
<html lang="fr">

<head>
    <meta charset="utf-8">
    <meta name="generator" content="https://cosma.graphlab.fr/">
    {% for meta, value in metadata %}
    <meta name="{{ meta }}" content="{{ value }}">
    {% endfor %}
    <meta name="date" content="{{ date }}">
    <title>Cosma - Cosmoscope</title>

    <style>
        {% include "styles.css" %}
        {{ colors | safe }}
        {% include "print.css" %}

        {% if customCss %}
        {% include "custom.css" ignore missing %}
        {% endif %}
    </style>

    {# JS libraries #}

    <script>
        {% include "libs/d3.js" %}
        {% include "libs/fuse.js" %}
    </script>
</head>

<body>

    {# ========================================
    left side menu board
    ========================================= #}

    <aside class="menu list-content-container">

        <header role="banner">
            {% if publishMode and metadata.title %}
            <h1 class="title">{{ metadata.title }}</h1>
            {% else %}
            <div class="logo" title="Logo de Cosma">
                {% include "cosmalogo.svg" %}
            </div>
            {% endif %}

            <div class="load-bar" onclick="updateForces()" title="Spatialisation (Espace)">
                <div id="load-bar-value"></div>
            </div>
        </header>

        <section>
            <input class="search-bar" id="search" placeholder="Rechercher… (S)" autocomplete="off" role="search" />
            <ul id="search-result-list"></ul>
        </section>

        <details class="menu-types" open="open">
            <summary class="menu-title">
                Types <span id="types-counter" class="badge">{{ types | length }}</span>
            </summary>

            <ul class="menu-types-list">
                {% for type in types %}
                <li class="filter n_{{ type.name }}">
                    <label>
                        <input data-filter="{{ type.nodes | join(",") }}" name="{{ type.name }}"
                            type="checkbox" checked onchange="filter(this.checked, this.dataset.filter, this, true)">
                        {{ type.name }}
                        <span class="badge">{{ type.nodes | length }}</span>
                    </label>
                </li>
                {% endfor %}
            </ul>
        </details>

        {% if tags.length !== 0 %}
        <details class="menu-tags" data-sort="tag">
            <summary class="menu-title">
                Mots-clés <span id="tag-counter" class="badge">{{ tags | length }}</span>
            </summary>

            <button class="menu-tags-btn sort-btn">A-Z</button>

            <div class="menu-tags-container menu-tags-container-prim sort-box active">
                {% for tag in tags %}
                <button class="btn" data-tag="{{ loop.index }}" data-active="false" onclick="tag(this)">
                    {{ tag.name }} <span class="badge">{{ tag.nodes | length }}</span>
                </button>
                {% endfor %}
            </div>

            <div class="menu-tags-container sort-box">
                {% for tag in tags | reverse %}
                <button class="btn" data-tag="{{ loop.length - loop.index0 }}" data-active="false" onclick="tag(this)">
                    {{ tag.name }} <span class="badge">{{ tag.nodes | length }}</span>
                </button>
                {% endfor %}
            </div>
        </details>
        {% endif %}

        <details class="menu-index" id="index" data-sort="record">
            <summary class="menu-title">
                Index <span id="index-counter" class="badge">{{ records | length }}</span>
            </summary>

            <button class="menu-index-btn sort-btn">A-Z</button>

            <ul class="menu-index-list sort-box active">
                {% for record in records %}
                <li data-index="{{ record.id }}" onclick="openRecord({{ record.id }})">
                    <span class="record-type-point n_{{ record.type }}">⬤</span>
                    <span>{{ record.title }}</span>
                </li>
                {% endfor %}
            </ul>

            <ul class="menu-index-list sort-box">
                {% for record in records | reverse %}
                <li data-index="{{ record.id }}" onclick="openRecord({{ record.id }})">
                    <span class="record-type-point n_{{ record.type }}">⬤</span>
                    <span>{{ record.title }}</span>
                </li>
                {% endfor %}
            </ul>
        </details>

        <details class="menu-view" open="open">
            <summary class="menu-title">
                Vues <span class="badge">{{ views | length }}</span>
            </summary>

            <button onclick="saveView()">Sauvegarder la vue actuelle</button>

            {% if views.length !== 0 %}
            <div class="menu-view-container" id="views-container">
                {% for viewName, viewString in views %}
                <button class="btn" data-view="{{ viewString }}" data-active="false" onclick="changeView(this)">
                    {{ viewName }}
                </button>
                {% endfor %}
            </div>
            {% endif %}
        </details>

        <details class="menu-controls">
            <summary class="menu-title">Paramètres du graphe</summary>

            <ul class="menu-controls-list">
                <li>
                    <label>
                        <input type="checkbox" checked onchange="linksDisplayToggle(this.checked)">
                        Afficher les liens <span class="badge">{{ nblinks }}</span>
                    </label>
                </li>
                <li>
                    <label>
                        <input type="checkbox" checked onchange="labelDisplayToggle(this.checked)">
                        Afficher les étiquettes
                    </label>
                </li>
                <li>
                    <label>
                        <input type="checkbox" {{ "checked" if graph.config.highlight_on_hover }}
                            onchange="graphProperties.highlight_on_hover = this.checked">
                        Surbrillance au survol
                    </label>
                </li>
            </ul>

            {% macro inputRange(name, graphParameter, fx, defaultValue, min, max, step) %}
            <form oninput="graphProperties.{{ graphParameter }} = range.value; {{ fx }}">
                <label>{{ name }}</label>
                <input type="number" value="{{ defaultValue }}" name="number" min="{{ min }}" max="{{ max }}" oninput="range.value = number.value"/>
                <input type="range" min="{{ min }}" max="{{ max }}" value="{{ defaultValue }}" name="range" step="{{ step }}" oninput="number.value = range.value"/>
            </form>
            {% endmacro %}

            <article class="menu-controls-container">
                <p class="menu-controls-title">
                    Attraction
                    <span data-help="Contrôlez la répartition des nœuds dans l’espace, la force de répulsion,
                        la distance maximum sur laquelle ils se déploient et la pression sur les axes verticaux et horizontaux."></span>
                </p>
                {{ inputRange('force', 'attraction.force', 'updateForces()', graph.config.attraction.force, 50, 600, 0.1) }}
                {{ inputRange('distance max', 'attraction.distance_max', 'updateForces()', graph.config.attraction.distance_max, 0, 800, 0.1) }}
                {{ inputRange('verticale', 'attraction.verticale', 'updateForces()', graph.config.attraction.verticale, 0, 1, 0.01) }}
                {{ inputRange('horizontale', 'attraction.horizontale', 'updateForces()', graph.config.attraction.horizontale, 0, 1, 0.01) }}
            </article>

            <article class="menu-controls-container">
                <p class="menu-controls-title">Texte</p>
                {{ inputRange('taille', 'text_size', 'updateFontsize()', graph.config.text_size, 5, 15, 0.5) }}
            </article>
        </details>

        <footer class="menu-footer">
            {% if usedCitationReferences %}
            <span onclick="openRecord('citation-references', false)"
                class="bibliography-open" title="Données bibliographiques">
                Données
            </span>
            {% endif %}

            <span onclick="openRecord('help', false)">
                Aide
            </span>

            <div class="about" onclick="openRecord('credits', false)">
                {{ "Fabriqué avec Cosma - À propos" if publishMode else "À propos" }}
            </div>
        </footer>
    </aside>

    {# ========================================
    right side records container
    ========================================= #}

    <main id="record-container" class="record-container">
        <button class="record-btn-close" onclick="closeRecord()">Fermer (Echap)</button>

        {% for record in records %}
        <article id="{{ record.id }}" class="record">
            <header>
                <h1 class="record-title">{{ record.title }}</h1>

                <div class="record-id">
                    <span>id :</span>
                    <span>{{ record.id }}</span>
                </div>

                <div class="record-last-edit">
                    <span>dernière édition :</span>
                    <time class="record-date" datetime="{{ record.mtime }}">{{ record.mtime }}</time>
                </div>

                <div class="record-type">
                    <span>type :</span>
                    <span>{{ record.type }}</span>
                </div>

                {% if record.tags %}
                <div class="record-tags">
                    <span>mots-clés :</span>
                    <span>{{ record.tags }}</span>
                </div>
                {% endif %}
            </header>

            <main class="record-content">
                {% if linkSymbol %}
                    {{ record.content | replace(r/(\[\[\s*).*?(\]\])/g, linkSymbol) | safe }}
                {% else %}
                    {{ record.content | safe }}
                {% endif %}

                {% if record.bibliography %}
                <section class="bibliography">
                    <hr/>
                    <h1>Bibliographie</h1>
                    {{ record.bibliography | safe }}
                </section>
                {% endif %}
            </main>

            <footer class="list-content-container">
                {% if record.links.length !== 0 %}
                <details class="record-links" open="open">
                    <summary class="menu-title">
                        Liens <span class="badge">{{ record.links | length }}</span>
                    </summary>

                    <ul class="record-links-list">
                        {% for link in record.links %}
                        <li onclick="openRecord({{ link.target.id }})">
                            <span class="record-type-point n_{{ link.target.type }}">⬤</span>
                            <span>{{ link.target.title }}</span>
                            <div class="record-links-context">
                                {% if linkSymbol %}
                                    {{ link.context | replace(r/(\[\[\s*).*?(\]\])/g, linkSymbol) | safe }}
                                {% else %}
                                    {{ link.context | safe }}
                                {% endif %}
                            </div>
                        </li>
                        {% endfor %}
                    </ul>
                </details>
                {% endif %}

                {% if record.backlinks.length !== 0 %}
                <details class="record-backlinks" open="open">
                    <summary class="menu-title">
                        Rétroliens <span class="badge">{{ record.backlinks | length }}</span>
                    </summary>

                    <ul class="record-backlinks-list">
                        {% for backlink in record.backlinks %}
                        <li onclick="openRecord({{ backlink.target.id }})">
                            <span class="record-type-point n_{{ backlink.target.type }}">⬤</span>
                            <span>{{ backlink.target.title }}</span>
                            <div class="record-links-context">
                                {% if linkSymbol %}
                                    {{ backlink.context | replace(r/(\[\[\s*).*?(\]\])/g, linkSymbol) | safe }}
                                {% else %}
                                    {{ backlink.context | safe }}
                                {% endif %}
                            </div>
                        </li>
                        {% endfor %}
                    </ul>
                </details>
                {% endif %}
            </footer>
        </article>
        {% endfor %}
        
        {# Help #}
        
        <article id="help" class="record">
            <main>
                <h1>Aide</h1>
                
                <p><a href="https://hyperotlet.github.io/cosma/fr.html#utilisation-du-cosmoscope" target="_blank">Cliquez ici pour accéder à la documentation de Cosma</a></p>
                
                <h2>Raccourcis</h2>
                
                    <table>
                        <tbody>
                            <tr>
                                <td>Espace</td>
                                <td>Réactiver l'algorithme de dessin du graphe</td>
                            </tr>
                            <tr>
                                <td>S</td>
                                <td>Déplacer le curseur dans le champ Recherche</td>
                            </tr>
                            <tr>
                                <td>Alt + clic</td>
                                <td>(sur un type de fiche) Désélectionner les autres types</td>
                            </tr>
                            <tr>
                                <td>R</td>
                                <td>Réinitialiser le zoom</td>
                            </tr>
                            <tr>
                                <td>Alt + R</td>
                                <td>Réinitialiser tous les paramètres visuels</td>
                            </tr>
                            <tr>
                                <td>C</td>
                                <td>Zoomer sur le nœud de la fiche active</td>
                            </tr>
                            <tr>
                                <td>F</td>
                                <td>Passer en mode Focus</td>
                            </tr>
                            <tr>
                                <td>Echap</td>
                                <td>Fermer la fiche</td>
                            </tr>
                        </tbody>
                    </table>
            </main>
        </article>

        {# Cosma's authors & contributors credits #}

        <article id="credits" class="record">
            <main>
                {% if publishMode %}
                    {% if metadata.title %}
                    <h1 class="metas-title">{{ metadata.title }}</h1>
                    {% endif %}

                    {% if metadata.author %}
                    <p class="metas-author">{{ metadata.author }}</p>
                    {% endif %}

                    {% if metadata.description %}
                    <p class="metas-description">{{ metadata.description }}</p>
                    {% endif %}
                    
                    <hr>
                {% endif %}

                {% if publishMode and metadata %}
                <div class="logo" title="Logo de Cosma">
                    {% include "cosmalogo.svg" %}
                </div>
                {% else %}
                <h1>Cosma</h1>
                {% endif %}

                <p>Version 1.2.0 • Licence MIT</p>

                <ul>
                    <li>Arthur Perret</li>
                    <li>Guillaume Brioudes</li>
                    <li>Olivier Le Deuff</li>
                    <li>Clément Borel</li>
                    <li>Programme ANR <a href="https://hyperotlet.hypotheses.org/">HyperOtlet</a></li>
                </ul>

                <dl>
                    <dt><a href="https://d3js.org/" target="_blank">D3 <span class="badge">v4.13.0</span></a></dt>
                    <dd>Mike Bostock (BSD 3-Clause)</dd>
                    <dt><a href="https://mozilla.github.io/nunjucks/" target="_blank">Nunjucks <span class="badge">v3.2.3</span></a></dt>
                    <dd>James Long (BSD 2-Clause)</dd>
                    <dt><a href="https://github.com/nodeca/js-yaml" target="_blank">Js-yaml <span class="badge">v3.14.0</span></a></dt>
                    <dd>Vitaly Puzrin (MIT License)</dd>
                    <dt><a href="https://github.com/dworthen/js-yaml-front-matter" target="_blank">Js-yaml-front-matter <span class="badge">v4.1.0</span></a></dt>
                    <dd>Derek Worthen (MIT License)</dd>
                    <dt><a href="https://github.com/markdown-it/markdown-it" target="_blank">Markdown-it <span class="badge">v12.0.2</span></a></dt>
                    <dd>Vitaly Puzrin, Alex Kocharin (MIT License)</dd>
                    <dt><a href="https://github.com/wilsonzlin/minify-html" target="_blank">Minify-html <span class="badge">v0.4.3</span></a></dt>
                    <dd>Wilson Lin (MIT License)</dd>
                    <dt><a href="https://fusejs.io/" target="_blank">Fuse-js <span class="badge">v6.4.6</span></a></dt>
                    <dd>Kiro Risk (Apache License 2.0)</dd>
                    <dt><a href="https://momentjs.com/" target="_blank">Moment <span class="badge">v2.29.1</span></a></dt>
                    <dd>Iskren Ivov Chernev (MIT License)</dd>
                </dl>
            </main>
        </article>

        {% if usedCitationReferences %}
        <article id="citation-references" class="record">
            <main>
                <h1>Données bibliographiques</h1>
    
                <p>
                    Les données ci-dessous correspondent aux références citées dans ce cosmoscope. Elles sont en Citation Style Language, exprimé en JSON. Ce format est reconnu notamment par Zotero, Mendeley et Papers. Cliquez sur le bouton ci-dessous pour télécharger les données.
                </p>
    
                <button>Télécharger</button>
    
                <code>{{ usedCitationReferences | dump | escape }}</code>
            </main>
        </article>
        {% endif %}

    </main>

    {# ========================================
    Cosma graph
    ========================================= #}

    <div class="graph-wrapper" style="background-color: {{ graph.config.background_color }}">
        <svg id="graph-canvas">
            <defs>
                <marker id="arrow" viewBox="0 0 10 10" refX="22" refY="5" markerUnits="strokeWidth" markerWidth="5" markerHeight="5" orient="auto">
                    <path d="M 0 0 L 10 5 L 0 10 z"></path>
                </marker>
                <filter id="double">
                    <feMorphology in="SourceGraphic" result="a" operator="dilate" radius="0.2"></feMorphology>
                    <feComposite in="SourceGraphic" in2="a" result="xx" operator="xor"></feComposite>
                </filter>
            </defs>
        </svg>

        <div class="graph-controls">
            <div class="graph-controls-zoom">
                <button onclick="zoomLess()">-</button>
                <button onclick="zoomReset()">Recentrer (R)</button>
                <button onclick="zoomMore()">+</button>
            </div>

            <div class="graph-controls-viewreset">
                <button onclick="resetView()">Réinitialiser (Alt + R)</button>
            </div>

            {% if focusIsActive %}
            <div class="graph-controls-focus">
                <label>
                    <input id="focus-check" type="checkbox" name="checkbox">
                    Focus (F)
                </label>

                <input id="focus-range" type="range" min="0" max="6" value="1" name="range" step="1" />
            </div>
            {% endif %}
        </div>
    </div>

    {# Cosma data #}

    <script>
        const data = {{ graph.data | safe }};
        const graphProperties = {{ graph.config | dump | safe }};
        const tagList = {{ tags | dump | safe }};
    </script>

    {# Cosma functions #}

    <script>
        {% include "scripts/main.js" %}
        {% include "scripts/history.js" %}
        {% include "scripts/graph.js" %}
        {% include "scripts/zoom.js" %}
        {% include "scripts/search.js" %}
        {% include "scripts/filter.js" %}
        {% include "scripts/focus.js" %}
        {% include "scripts/tag.js" %}
        {% include "scripts/index.js" %}
        {% include "scripts/record.js" %}
        {% include "scripts/view.js" %}
        {% include "scripts/keyboard.js" %}
        {% include "scripts/counter.js" %}

        {% if usedCitationReferences %}
            {% include "scripts/bibliography.js" %}
        {% endif %}
    </script>
</body>

</html>